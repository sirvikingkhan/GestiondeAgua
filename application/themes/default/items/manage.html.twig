{% extends _layout %}
{% block css %}
    {{parent()}}
    <link rel="stylesheet" href="{{base_url()}}assets/bower_components/datatables/media/css/jquery.dataTables.css"/>
    <link rel="stylesheet" href="{{base_url()}}assets/bower_components/datatables-fixedcolumns/css/dataTables.fixedColumns.css"/>
{% endblock %}
{% block header %}
    {% include 'partials/header.html.twig' %}
{% endblock %}
{% block content %}
    <div id="page-wrapper">
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        {{line('common_list_of')~' '~line('module_'~controller_name) }}
                        <div class="btn-group" role="group">
                            {{ anchor(controller_name~"/view/-1?width="~form_width,line(controller_name~'_new'),
		{'class':'btn btn-primary thickbox','title':line(controller_name~'_new')})}}
                            {{anchor(controller_name~"/bulk_edit?width="~form_width,line(controller_name~"_bulk_edit"),
{'id':'bulk_edit','title':line(controller_name~'_edit_multiple_items'), 'class':'btn btn-default'}) }}
                            {{anchor("#",line(controller_name~"_generate_barcodes"),
{'id':'generate_barcodes', 'target' :'_blank','title':line(controller_name~'_generate_barcodes'), 'class':'btn btn-default thickbox'}) }}
                            {{ anchor(controller_name~"/excel_import?width="~form_width,"Excel Import",
		{'class':'btn btn-info thickbox','title':'Import '~ line('module_'~controller_name) ~' from Excel'})}}
                        </div>
                        <div class="btn-group" role="group">
                            {{ anchor(controller_name~"/delete",line("common_delete"),{'id':'delete', 'class':'btn btn-warning'})}}
                            <a href="#" id="email" class="btn btn-default">{{line("common_email")}}</a>
                        </div>
                        <div class="btn-group" role="group">


                            <div id="search_filter_section" style="display: {{ search_section_state is defined?  ( (search_section_state)? 'block' : 'none') : 'none'}}background-color:#EEEEEE">
                                {{ form_open(controller_name~"/refresh",{'id':'items_filter_form'}) }}
                                {{ form_label(line('items_low_inventory_items')~' '~':', 'low_inventory')}}
                                {{ form_checkbox({'name':'low_inventory','id':'low_inventory','value':1,'checked': low_inventory is defined?  ( (low_inventory)? 1 : 0) : 0})~' | ' }}
                                {{ form_label(line('items_serialized_items')~' '~':', 'is_serialized')}}
                                {{ form_checkbox({'name':'is_serialized','id':'is_serialized','value':1,'checked': is_serialized is defined?  ( (is_serialized)? 1 : 0) : 0})~' | '}}
                                {{ form_label(line('items_no_description_items')~' '~':', 'no_description')}}
                                {{ form_checkbox({'name':'no_description','id':'no_description','value':1,'checked': no_description is defined?  ( (no_description)? 1 : 0) : 0})~' | '}}

                                <!--Por almacenes-->
                                {{ form_label(line('almacenes_almacen')~' '~':', 'no_description')}}
                                {{ form_dropdown('almacen_id', almacenes, selected_almacen,"id = 'almacen_search' style='width: 163px'")}}
                                {{ form_checkbox({'name':'no_description','id':'no_description','value':1,'checked': no_description is defined?  ( (no_description)? 1 : 0) : 0})~' | '}}
                                <input type="hidden" name="search_section_state" id="search_section_state" value="{{ search_section_state is defined?  ( (search_section_state)? 'block' : 'none') : 'none'}}" />
                                </form>
                            </div>


                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="dataTable_wrapper">
                            {{  manage_table }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="feedback_bar"></div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="{{base_url()}}assets/bower_components/datatables/media/js/jquery.dataTables.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
    <script src="{{base_url()}}assets/bower_components/datatables-fixedcolumns/js/dataTables.fixedColumns.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
    <script src="{{base_url()}}js/manage_tables.js" type="text/javascript" language="javascript" charset="UTF-8"></script>
    
    <script type="text/javascript">
        var oTable=null;
        $(document).ready(function () {
            var len = {{total_almacenes}};
            var sort = [];
            idx = 8;
            for (indice = sort.length; indice < len; indice++) {
                sort[indice] = indice + idx;
            }
            sort[indice++] = 0;
            sort[indice++] = 4;
            sort[indice++] = 7;
            //enable_select_all()
            //enable_checkboxes()
            //enable_row_selection()
            enable_delete('{{ line(controller_name~"_confirm_delete")}}', '{{ line(controller_name~"_none_selected")}}')
            enable_bulk_edit('{{ line(controller_name~"_none_selected")}}')

            oTable = $('#sortable_table').dataTable({
                //scrollY: "450px",
                scrollX: true,
                scrollCollapse: true,
                "processing": true,
                "serverSide": true,
                //"bJQueryUI": true,
                "iDisplayLength": 10,
                //"sPaginationType": "full_numbers",
                //"sAjaxSource": 'customers/mis_datos',
                "ajax": '{{controller_name}}/mis_datos',
                /*       "aoColumnDefs": [
                 {'bSortable': false, 'aTargets': [0]},
                 {'bSortable': false, 'aTargets': [4]},
                 {'bSortable': false, 'aTargets': [7]},
                 {'bSortable': false, 'aTargets': [8]},
                 {'bSortable': false, 'aTargets': [9]},
                 {'bSortable': false, 'aTargets': [10]},
                 {'bSortable': false, 'aTargets': [11]},
                 {'bSortable': false, 'aTargets': [13]}
                 
                 ],*/
                "columnDefs": [
                    {'sortable': false, 'targets': sort},
                    {"searchable": false, 'targets': sort}
                ],
                "order": [[2, "asc"]],
                "fnDrawCallback": function () {
                    //alert("{{total_almacenes}}");
                    //tb_init('#sortable_table a.thickbox');
                    //imgLoader = new Image();// preload image
                    //imgLoader.src = tb_pathToImage;
                    enable_row_selection();
                }
            });
            new $.fn.dataTable.FixedColumns(oTable, {
                leftColumns: 3
            });
            $('#generate_barcodes').click(function ()
            {
                var selected = get_selected_values();
                if (selected.length == 0) {
                    alert('{{ line('items_must_select_item_for_barcode') }}');
                    return false;
                }
                //(this).attr('href', 'index.php/items/generate_barcodes/' + selected.join(','));
                $(this).attr('href', '{{site_url("items")}}/generate_barcodes/' + selected.join(','));
            });

            $("#low_inventory").click(function ()
            {
                $('#items_filter_form').submit();
            });

            $("#is_serialized").click(function ()
            {
                $('#items_filter_form').submit();
            });

            $("#no_description").click(function ()
            {
                $('#items_filter_form').submit();
            });

            $("#almacen_search").change(function ()
            {
                $('#items_filter_form').submit();
            });
            
            });
        /*function init_table_sorting()
         {
         //Only init if there is more than one row
         if ($('#tablesorter tbody tr').length > 1)
         {
         $("#sortable_table").tablesorter(
         {
         sortList: [[1, 0]],
         headers:
         {
         0: {sorter: false},
         8: {sorter: false},
         9: {sorter: false}
         }
         
         })
         }
         }*/

        function post_item_form_submit(response) {
            if (!response.success){
                //set_feedback(response.message, 'error_message', true);
                new PNotify({
                    title: 'Oh No!',
                    text: response.message,
                    type: 'error'
                });
            }
            else{
                //This is an update, just update one row
                if (jQuery.inArray(response.item_id, get_visible_checkbox_ids()) != -1){
                    update_row(response.item_id, '{{ site_url(controller_name~"/get_row")}}');
                    //set_feedback(response.message, 'success_message', false);
                    new PNotify({
                        title: 'Exito',
                        text: response.message,
                        type: 'success'
                    });
                }
                else {
                ////refresca toda la tabla.
                    oTable.api().ajax.reload(
                            function ( json ) {
                                hightlight_row(response.item_id);
                                new PNotify({
                                    title: 'Exito',
                                    text: response.message,
                                    type: 'success'
                                });}
                            );
                }
            }
        }
        

        function post_bulk_form_submit(response) {
            if (!response.success) {
                set_feedback(response.message, 'error_message', true);
            }
            else {
                var selected_item_ids = get_selected_values();
                for (k = 0; k < selected_item_ids.length; k++) {
                    update_row(selected_item_ids[k], '{{ site_url(controller_name~"/get_row")}}');
                }
                set_feedback(response.message, 'success_message', false);
            }
        }

        function show_hide_search_filter(search_filter_section, switchImgTag) {
            var ele = document.getElementById(search_filter_section);
            var imageEle = document.getElementById(switchImgTag);
            var elesearchstate = document.getElementById('search_section_state');
            if (ele.style.display == "block") {
                ele.style.display = "none";
                imageEle.innerHTML = '<img src=" {{ base_url()}}images/plus.png" style="border:0outline:nonepadding:0pxmargin:0pxposition:relativetop:-5px" >';
                elesearchstate.value = "none";
            }
            else {
                ele.style.display = "block";
                imageEle.innerHTML = '<img src=" {{ base_url()}}images/minus.png" style="border:0outline:nonepadding:0pxmargin:0pxposition:relativetop:-5px" >';
                elesearchstate.value = "block";
            }
        }

    </script>
{% endblock %}